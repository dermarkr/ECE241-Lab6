|main
SW[0] => divisor[0].IN2
SW[1] => divisor[1].IN2
SW[2] => divisor[2].IN2
SW[3] => divisor[3].IN2
SW[4] => dividend[0].IN2
SW[5] => dividend[1].IN2
SW[6] => dividend[2].IN2
SW[7] => dividend[3].IN2
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
KEY[0] => resetn.IN2
KEY[1] => go.IN1
KEY[2] => ~NO_FANOUT~
KEY[3] => ~NO_FANOUT~
CLOCK_50 => CLOCK_50.IN2
LEDR[0] <= <GND>
LEDR[1] <= <GND>
LEDR[2] <= <GND>
LEDR[3] <= <GND>
LEDR[4] <= <GND>
LEDR[5] <= <GND>
LEDR[6] <= <GND>
LEDR[7] <= <GND>
LEDR[8] <= <GND>
LEDR[9] <= <GND>
HEX0[0] <= hex_decoder:H0.segments
HEX0[1] <= hex_decoder:H0.segments
HEX0[2] <= hex_decoder:H0.segments
HEX0[3] <= hex_decoder:H0.segments
HEX0[4] <= hex_decoder:H0.segments
HEX0[5] <= hex_decoder:H0.segments
HEX0[6] <= hex_decoder:H0.segments
HEX1[0] <= hex_decoder:H4.segments
HEX1[1] <= hex_decoder:H4.segments
HEX1[2] <= hex_decoder:H4.segments
HEX1[3] <= hex_decoder:H4.segments
HEX1[4] <= hex_decoder:H4.segments
HEX1[5] <= hex_decoder:H4.segments
HEX1[6] <= hex_decoder:H4.segments
HEX2[0] <= hex_decoder:H1.segments
HEX2[1] <= hex_decoder:H1.segments
HEX2[2] <= hex_decoder:H1.segments
HEX2[3] <= hex_decoder:H1.segments
HEX2[4] <= hex_decoder:H1.segments
HEX2[5] <= hex_decoder:H1.segments
HEX2[6] <= hex_decoder:H1.segments
HEX3[0] <= hex_decoder:H5.segments
HEX3[1] <= hex_decoder:H5.segments
HEX3[2] <= hex_decoder:H5.segments
HEX3[3] <= hex_decoder:H5.segments
HEX3[4] <= hex_decoder:H5.segments
HEX3[5] <= hex_decoder:H5.segments
HEX3[6] <= hex_decoder:H5.segments
HEX4[0] <= hex_decoder:H2.segments
HEX4[1] <= hex_decoder:H2.segments
HEX4[2] <= hex_decoder:H2.segments
HEX4[3] <= hex_decoder:H2.segments
HEX4[4] <= hex_decoder:H2.segments
HEX4[5] <= hex_decoder:H2.segments
HEX4[6] <= hex_decoder:H2.segments
HEX5[0] <= hex_decoder:H3.segments
HEX5[1] <= hex_decoder:H3.segments
HEX5[2] <= hex_decoder:H3.segments
HEX5[3] <= hex_decoder:H3.segments
HEX5[4] <= hex_decoder:H3.segments
HEX5[5] <= hex_decoder:H3.segments
HEX5[6] <= hex_decoder:H3.segments


|main|control:c0
clk => current_state[0]~reg0.CLK
clk => current_state[1]~reg0.CLK
clk => current_state[2]~reg0.CLK
clk => current_state[3]~reg0.CLK
clk => current_state[4]~reg0.CLK
clk => current_state[5]~reg0.CLK
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
resetn => current_state.OUTPUTSELECT
go => Mux1.IN62
go => Mux1.IN63
go => Mux0.IN63
ld_r <= ld_r.DB_MAX_OUTPUT_PORT_TYPE
lShift <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
sub <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
copy <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
add <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
current_state[0] <= current_state[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_state[1] <= current_state[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_state[2] <= current_state[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_state[3] <= current_state[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_state[4] <= current_state[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_state[5] <= current_state[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
next_state[0] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
next_state[1] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
next_state[2] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
next_state[3] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
next_state[4] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
next_state[5] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|main|datapath:d0
clk => divisor[0]~reg0.CLK
clk => divisor[1]~reg0.CLK
clk => divisor[2]~reg0.CLK
clk => divisor[3]~reg0.CLK
clk => divisor[4]~reg0.CLK
clk => dividend[0]~reg0.CLK
clk => dividend[1]~reg0.CLK
clk => dividend[2]~reg0.CLK
clk => dividend[3]~reg0.CLK
clk => dividend[4]~reg0.CLK
clk => dividend[5]~reg0.CLK
clk => dividend[6]~reg0.CLK
clk => dividend[7]~reg0.CLK
clk => dividend[8]~reg0.CLK
resetn => dividend.OUTPUTSELECT
resetn => dividend.OUTPUTSELECT
resetn => dividend.OUTPUTSELECT
resetn => dividend.OUTPUTSELECT
resetn => dividend.OUTPUTSELECT
resetn => dividend.OUTPUTSELECT
resetn => dividend.OUTPUTSELECT
resetn => dividend.OUTPUTSELECT
resetn => dividend.OUTPUTSELECT
resetn => divisor.OUTPUTSELECT
resetn => divisor.OUTPUTSELECT
resetn => divisor.OUTPUTSELECT
resetn => divisor.OUTPUTSELECT
resetn => divisor.OUTPUTSELECT
dividend_in[0] => dividend.DATAB
dividend_in[1] => dividend.DATAB
dividend_in[2] => dividend.DATAB
dividend_in[3] => dividend.DATAB
dividend_in[4] => ~NO_FANOUT~
dividend_in[5] => ~NO_FANOUT~
dividend_in[6] => ~NO_FANOUT~
dividend_in[7] => ~NO_FANOUT~
dividend_in[8] => ~NO_FANOUT~
divisor_in[0] => divisor.DATAB
divisor_in[1] => divisor.DATAB
divisor_in[2] => divisor.DATAB
divisor_in[3] => divisor.DATAB
divisor_in[4] => divisor.DATAB
lShift => dividend.OUTPUTSELECT
lShift => dividend.OUTPUTSELECT
lShift => dividend.OUTPUTSELECT
lShift => dividend.OUTPUTSELECT
lShift => dividend.OUTPUTSELECT
lShift => dividend.OUTPUTSELECT
lShift => dividend.OUTPUTSELECT
lShift => dividend.OUTPUTSELECT
lShift => dividend.OUTPUTSELECT
sub => dividend.OUTPUTSELECT
sub => dividend.OUTPUTSELECT
sub => dividend.OUTPUTSELECT
sub => dividend.OUTPUTSELECT
sub => dividend.OUTPUTSELECT
sub => dividend.OUTPUTSELECT
copy => dividend.OUTPUTSELECT
copy => dividend.OUTPUTSELECT
copy => dividend.OUTPUTSELECT
copy => dividend.OUTPUTSELECT
copy => dividend.OUTPUTSELECT
copy => dividend.OUTPUTSELECT
add => dividend.OUTPUTSELECT
add => dividend.OUTPUTSELECT
add => dividend.OUTPUTSELECT
add => dividend.OUTPUTSELECT
add => dividend.OUTPUTSELECT
ld_r => dividend.OUTPUTSELECT
ld_r => dividend.OUTPUTSELECT
ld_r => dividend.OUTPUTSELECT
ld_r => dividend.OUTPUTSELECT
ld_r => dividend.OUTPUTSELECT
ld_r => dividend.OUTPUTSELECT
ld_r => dividend.OUTPUTSELECT
ld_r => dividend.OUTPUTSELECT
ld_r => dividend.OUTPUTSELECT
ld_r => divisor.OUTPUTSELECT
ld_r => divisor.OUTPUTSELECT
ld_r => divisor.OUTPUTSELECT
ld_r => divisor.OUTPUTSELECT
ld_r => divisor.OUTPUTSELECT
dividend[0] <= dividend[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dividend[1] <= dividend[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dividend[2] <= dividend[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dividend[3] <= dividend[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dividend[4] <= dividend[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dividend[5] <= dividend[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dividend[6] <= dividend[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dividend[7] <= dividend[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
dividend[8] <= dividend[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divisor[0] <= divisor[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divisor[1] <= divisor[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divisor[2] <= divisor[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divisor[3] <= divisor[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
divisor[4] <= divisor[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|main|hex_decoder:H0
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|main|hex_decoder:H1
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|main|hex_decoder:H2
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|main|hex_decoder:H3
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|main|hex_decoder:H4
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|main|hex_decoder:H5
hex_digit[0] => Decoder0.IN3
hex_digit[1] => Decoder0.IN2
hex_digit[2] => Decoder0.IN1
hex_digit[3] => Decoder0.IN0
segments[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


